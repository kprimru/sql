USE [ClientDB]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[CLIENT_AUDIT_DEFAULT]
	@CLIENT	INT
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE
		@DebugError		VarChar(512),
		@DebugContext	Xml,
		@Params			Xml;

	EXEC [Debug].[Execution@Start]
		@Proc_Id		= @@ProcId,
		@Params			= @Params,
		@DebugContext	= @DebugContext OUT

	BEGIN TRY

		DECLARE @STUDY BIT
		DECLARE @STUDY_DATE SMALLDATETIME

		DECLARE @DUTY BIT
		DECLARE @DUTY_DATE	SMALLDATETIME
		DECLARE @DUTY_AVG	DECIMAL(8, 4)

		DECLARE @RIVAL	BIT
		DECLARE @RIVAL_DATE	SMALLDATETIME

		DECLARE @SYSTEM	BIT
		DECLARE @SYSTEM_COUNT	INT
		DECLARE @SYSTEM_ERROR	INT

		DECLARE @SEARCH_NOTE	VARCHAR(MAX)

		SELECT @STUDY_DATE = MAX(DATE)
		FROM dbo.ClientStudy
		WHERE ID_CLIENT = @CLIENT
			AND TEACHED = 1
			AND STATUS = 1

		SET @STUDY = 0
		IF (DATEDIFF(MONTH, @STUDY_DATE, GETDATE()) > 12) OR (@STUDY_DATE IS NULL)
			SET @STUDY = 1

		SELECT @DUTY_DATE = CONVERT(SMALLDATETIME, CONVERT(VARCHAR(20), MAX(ClientDutyDateTime), 112), 112)
		FROM dbo.ClientDutyTable
		WHERE ClientID = @CLIENT AND STATUS = 1

		SET @DUTY_AVG =
			CONVERT(DECIMAL(8, 4),
					(
						SELECT COUNT(*)
						FROM dbo.ClientDutyTable
						WHERE ClientID = @CLIENT AND STATUS = 1
					)
				) / 6

		SET @DUTY = 0
		IF (DATEDIFF(MONTH, @DUTY_DATE, GETDATE()) > 6) OR (@DUTY_AVG < 0.5) OR (@DUTY_DATE IS NULL)
			SET @DUTY = 1


		SELECT @RIVAL_DATE = MAX(CR_DATE)
		FROM dbo.ClientRival
		WHERE CL_ID = @CLIENT

		SET @RIVAL = 0
		IF DATEDIFF(MONTH, @RIVAL_DATE, GETDATE()) <= 6
			SET @RIVAL = 1

		DECLARE @BEGIN	SMALLDATETIME
		DECLARE @END	SMALLDATETIME

		SET @END = CONVERT(SMALLDATETIME, CONVERT(VARCHAR(20), GETDATE(), 112), 112)
		SET @BEGIN = DATEADD(MONTH, -6, @END)

		SET @SYSTEM_COUNT =
			(
				SELECT COUNT(DISTINCT UIU_DATE_S)
				FROM USR.USRIBDateView WITH(NOEXPAND)
				WHERE UD_ID_CLIENT = @CLIENT
					AND UIU_DATE_S BETWEEN @BEGIN AND @END
			)

		SET @SYSTEM_ERROR =
			(
				SELECT COUNT(DISTINCT CONVERT(VARCHAR(20), UI_LAST, 112))
				FROM USR.USRIBComplianceView WITH(NOEXPAND)
				WHERE UD_ID_CLIENT = @CLIENT
					AND UI_LAST BETWEEN @BEGIN AND @END
			)

		SET @SYSTEM = 0
		IF (@SYSTEM_ERROR > 3) OR (@SYSTEM_COUNT < 20)
			SET @SYSTEM = 1

		SELECT @SEARCH_NOTE = CONVERT(VARCHAR(20), CONVERT(DATETIME, CM_DATE, 121), 104) + ' ' + CM_TEXT
		FROM
			dbo.ClientSearchComments a CROSS APPLY
			(
				SELECT
					z.value('@TEXT[1]', 'VARCHAR(250)') AS CM_TEXT,
					z.value('@DATE[1]', 'VARCHAR(50)') AS CM_DATE
				FROM CSC_COMMENTS.nodes('/ROOT/COMMENT') x(z)
			) AS o_O
		WHERE CSC_ID_CLIENT = @CLIENT

		SELECT
			@STUDY AS CA_STUDY, @STUDY_DATE AS CA_STUDY_DATE,
			@DUTY AS CA_DUTY, @DUTY_DATE AS CA_DUTY_DATE, @DUTY_AVG AS CA_DUTY_AVG,
			@RIVAL AS CA_RIVAL, @RIVAL_DATE AS CA_RIVAL_DATE,
			@SYSTEM AS CA_SYSTEM, @SYSTEM_COUNT AS CA_SYSTEM_COUNT,
			@SYSTEM_ERROR AS CA_SYSTEM_ERROR,
			@SEARCH_NOTE AS CA_SEARCH_NOTE,
			CONVERT(BIT, 0) AS CA_INCOME, '' AS CA_INCOME_NOTE

		EXEC [Debug].[Execution@Finish] @DebugContext = @DebugContext, @Error = NULL;
	END TRY
	BEGIN CATCH
		SET @DebugError = Error_Message();

		EXEC [Debug].[Execution@Finish] @DebugContext = @DebugContext, @Error = @DebugError;

		EXEC [Maintenance].[ReRaise Error];
	END CATCH
END
GRANT EXECUTE ON [dbo].[CLIENT_AUDIT_DEFAULT] TO rl_client_audit_i;
GO