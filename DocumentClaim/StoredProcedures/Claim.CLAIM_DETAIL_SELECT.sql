USE [DocumentClaim]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[Claim].[CLAIM_DETAIL_SELECT]', 'P ') IS NULL EXEC('CREATE PROCEDURE [Claim].[CLAIM_DETAIL_SELECT]  AS SELECT 1')
GO
ALTER PROCEDURE [Claim].[CLAIM_DETAIL_SELECT]
	@ID	UNIQUEIDENTIFIER
AS
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY
		EXEC Maintenance.START_PROC @@PROCID

		SELECT 
			DD.ID_SYSTEM, DD.ID_NEW_SYSTEM, DD.ID_NET, DD.ID_NEW_NET, DD.ID_TYPE, DD.ID_MONTH_BONUS, DD.ID_CONDITIONS,
			CASE
				WHEN DD.ID_NEW_SYSTEM IS NULL THEN SS.SHORT
				ELSE 'с ' + SS.SHORT + ' на ' + DS.SHORT
			END AS SYS_STR,
			CASE
				WHEN DD.ID_NEW_NET IS NULL THEN SN.SHORT
				ELSE 'с ' + SN.SHORT + ' на ' + DN.SHORT
			END AS NET_STR,
			ID_ACTION, A.SHORT, CNT, DISCOUNT, INFLATION, T.SHORT AS TYPE_SHORT, MB.SHORT AS MONTH_BONUS_SHORT,
			(
				SELECT String_Agg(C.SHORT, ',')
				FROM string_split(DD.ID_CONDITIONS, ',') AS V
				INNER JOIN Claim.Condition AS C ON C.ID = V.value
			) AS CONDITIONS_SHORT
		FROM Claim.DocumentDetail	AS DD
		INNER JOIN Distr.System		AS SS ON DD.ID_SYSTEM = SS.ID
		INNER JOIN Distr.Net		AS SN ON DD.ID_NET = SN.ID
		LEFT JOIN Distr.System		AS DS ON DD.ID_NEW_SYSTEM = DS.ID
		LEFT JOIN Distr.Net			AS DN ON DD.ID_NEW_NET = DN.ID
		LEFT JOIN Claim.Action		AS A ON DD.ID_ACTION = A.ID
		LEFT JOIN Distr.Type		AS T ON T.ID = DD.ID_TYPE
		LEFT JOIN Claim.MonthBonus	AS MB ON MB.ID = DD.ID_MONTH_BONUS
		WHERE ID_DOCUMENT = @ID
		ORDER BY SS.ORD, DS.ORD, SN.COEF, SN.TECH, SN.NET_COUNT, DN.COEF, DN.TECH, DN.NET_COUNT;

		EXEC Maintenance.FINISH_PROC @@PROCID
	END TRY
	BEGIN CATCH
		DECLARE	@SEV	INT
		DECLARE	@STATE	INT
		DECLARE	@NUM	INT
		DECLARE	@PROC	NVARCHAR(128)
		DECLARE	@MSG	NVARCHAR(2048)

		SELECT
			@SEV	=	ERROR_SEVERITY(),
			@STATE	=	ERROR_STATE(),
			@NUM	=	ERROR_NUMBER(),
			@PROC	=	ERROR_PROCEDURE(),
			@MSG	=	ERROR_MESSAGE()

		EXEC Maintenance.ERROR_RAISE @SEV, @STATE, @NUM, @PROC, @MSG
	END CATCH
END
GO
GRANT EXECUTE ON [Claim].[CLAIM_DETAIL_SELECT] TO rl_claim_r;
GO
