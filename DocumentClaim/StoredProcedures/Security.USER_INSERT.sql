USE [DocumentClaim]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[Security].[USER_INSERT]', 'P ') IS NULL EXEC('CREATE PROCEDURE [Security].[USER_INSERT]  AS SELECT 1')
GO
ALTER PROCEDURE [Security].[USER_INSERT]
	@WIN_LOGIN	NVARCHAR(128),
	@SQL_LOGIN NVARCHAR(128),
	@PASSWORD	NVARCHAR(128),
	@NAME	NVARCHAR(128),
	@DEP	UNIQUEIDENTIFIER,
	@HEAD	BIT,
	@GROUPS	NVARCHAR(MAX),
	@ID		UNIQUEIDENTIFIER = NULL OUTPUT
WITH EXECUTE AS OWNER
AS
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY
		EXEC Maintenance.START_PROC @@PROCID

		DECLARE @ER_TXT NVARCHAR(2048)
		DECLARE @SQL NVARCHAR(MAX)

		DECLARE @LG_EXISTS	BIT
		DECLARE @US_EXISTS	BIT

		DECLARE @TBL TABLE(ID UNIQUEIDENTIFIER)

		DECLARE @LOGIN NVARCHAR(128);

		IF @WIN_LOGIN IS NOT NULL
			SET @LOGIN = @WIN_LOGIN
		ELSE
			SET @LOGIN = @SQL_LOGIN;

		IF EXISTS
			(
				SELECT * FROM sys.server_principals WHERE name = @LOGIN
			)
			SET @LG_EXISTS = 1
		ELSE
			SET @LG_EXISTS = 0

		IF EXISTS
			(
				SELECT * FROM sys.database_principals WHERE name = @LOGIN
			)
			SET @US_EXISTS = 1
		ELSE
			SET @US_EXISTS = 0

		IF @US_EXISTS = 1
		BEGIN
			SET @ER_TXT = 'Пользователь или роль "' + @LOGIN + '" уже существует в базе данных. Выберите другое имя.'

			RAISERROR(@ER_TXT, 16, 1)
		END
		ELSE
		BEGIN
			IF @LG_EXISTS = 0
			BEGIN

				IF @WIN_LOGIN IS NOT NULL BEGIN
					SET @SQL = N'CREATE LOGIN ' + QUOTENAME(@LOGIN) + ' FROM WINDOWS'
					EXEC (@SQL)
				END ELSE BEGIN
					SET @SQL = N'CREATE LOGIN ' + QUOTENAME(@LOGIN) + ' WITH PASSWORD=''' + @PASSWORD + ''', CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF';
					EXEC (@SQL)
				END;
			END

			IF @US_EXISTS = 0
			BEGIN
				SET @SQL = 'CREATE USER ' + QUOTENAME(@LOGIN) + ' FOR LOGIN ' + QUOTENAME(@LOGIN)
				EXEC (@SQL)
			END
		END

		INSERT INTO Security.Users(NAME, CAPTION, ID_DEPARTMENT, HEAD)
			OUTPUT inserted.ID INTO @TBL
			VALUES(@LOGIN, @NAME, @DEP, @HEAD)

		SELECT @ID = ID FROM @TBL

		DECLARE GR CURSOR LOCAL FOR
			SELECT NAME
			FROM
				Common.TableGUIDFromXML(@GROUPS) a
				INNER JOIN Security.RoleGroup b ON a.ID = b.ID

		OPEN GR

		DECLARE @GRP NVARCHAR(256)

		FETCH NEXT FROM GR INTO @GRP

		WHILE @@FETCH_STATUS = 0
		BEGIN
			EXEC sp_addrolemember @GRP, @LOGIN

			FETCH NEXT FROM GR INTO @GRP
		END

		CLOSE GR
		DEALLOCATE GR

		EXEC Maintenance.FINISH_PROC @@PROCID
	END TRY
	BEGIN CATCH
		DECLARE	@SEV	INT
		DECLARE	@STATE	INT
		DECLARE	@NUM	INT
		DECLARE	@PROC	NVARCHAR(128)
		DECLARE	@MSG	NVARCHAR(2048)

		SELECT
			@SEV	=	ERROR_SEVERITY(),
			@STATE	=	ERROR_STATE(),
			@NUM	=	ERROR_NUMBER(),
			@PROC	=	ERROR_PROCEDURE(),
			@MSG	=	ERROR_MESSAGE()

		EXEC Maintenance.ERROR_RAISE @SEV, @STATE, @NUM, @PROC, @MSG
	END CATCH
END
GO
GRANT EXECUTE ON [Security].[USER_INSERT] TO rl_user_u;
GO
