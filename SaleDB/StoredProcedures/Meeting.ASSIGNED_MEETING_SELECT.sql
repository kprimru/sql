USE [SaleDB]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [Meeting].[ASSIGNED_MEETING_SELECT]
	@ID		UNIQUEIDENTIFIER,
	@RC		INT				=	NULL OUTPUT
AS
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY		
		SELECT 
			a.ID, a.ID_PARENT, EXPECTED_DATE, b.SHORT, b.NAME, 
			/*c.SHORT AS PERS,*/ 
			REVERSE(STUFF(REVERSE(
				(
					SELECT y.SHORT + ', '
					FROM 
						Meeting.AssignedMeetingPersonal z
						INNER JOIN Personal.OfficePersonal y ON z.ID_PERSONAL = y.ID
					WHERE z.ID_MEETING = a.ID
					ORDER BY SHORT FOR XML PATH('')
				)), 1, 2, '')) AS PERS,
			e.SHORT AS ASSIGNER, d.NAME AS RESULT, SUCCESS_RATE,
			CASE ISNULL(DISPLAY, 1) WHEN 1 THEN ISNULL(i.NAME + ', ', '') ELSE '' END + ISNULL(h.PREFIX + ' ', '') +  ISNULL(h.NAME, '') + ISNULL(' ' + h.SUFFIX, '') AS ST_NAME, 
			g.NAME AS AR_NAME, INCOMING, j.NAME AS STAT_NAME
		FROM 
			Meeting.AssignedMeeting a
			--LEFT OUTER JOIN Personal.OfficePersonal c ON c.ID = a.ID_PERSONAL
			LEFT OUTER JOIN Client.Office b ON a.ID_OFFICE = b.ID
			LEFT OUTER JOIN Meeting.MeetingResult d ON d.ID = a.ID_RESULT
			LEFT OUTER JOIN Personal.OfficePersonal e ON e.ID = a.ID_ASSIGNER
			LEFT OUTER JOIN Meeting.MeetingAddress f ON f.ID_MEETING = a.ID
			LEFT OUTER JOIN Address.Area g ON g.ID = f.ID_AREA
			LEFT OUTER JOIN Address.Street h ON h.ID = f.ID_STREET
			LEFT OUTER JOIN Address.City i ON i.ID = h.ID_CITY
			LEFT OUTER JOIN Meeting.MeetingStatus j ON j.ID = a.ID_STATUS		
		WHERE a.ID_COMPANY = @ID AND a.ID_MASTER IS NULL AND a.STATUS = 1
		ORDER BY EXPECTED_DATE DESC

		SELECT @RC = @@ROWCOUNT
	END TRY
	BEGIN CATCH
		DECLARE	@SEV	INT
		DECLARE	@STATE	INT
		DECLARE	@NUM	INT
		DECLARE	@PROC	NVARCHAR(128)
		DECLARE	@MSG	NVARCHAR(2048)

		SELECT 
			@SEV	=	ERROR_SEVERITY(),
			@STATE	=	ERROR_STATE(),
			@NUM	=	ERROR_NUMBER(),
			@PROC	=	ERROR_PROCEDURE(),
			@MSG	=	ERROR_MESSAGE()

		EXEC Security.ERROR_RAISE @SEV, @STATE, @NUM, @PROC, @MSG
	END CATCH
END