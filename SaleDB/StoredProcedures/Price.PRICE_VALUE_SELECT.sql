USE [SaleDB]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [Price].[PRICE_VALUE_SELECT]
	@MONTH		UNIQUEIDENTIFIER,
	@SYS		UNIQUEIDENTIFIER,
	@SYS_OLD	UNIQUEIDENTIFIER,
	@SYS_NEW	UNIQUEIDENTIFIER,
	@NET		UNIQUEIDENTIFIER,
	@NET_OLD	UNIQUEIDENTIFIER,
	@NET_NEW	UNIQUEIDENTIFIER,
	@DELIVERY	MONEY = NULL OUTPUT,
	@SUPPORT	MONEY = NULL OUTPUT,
	@OLD_DISC	DECIMAL(6, 2) = NULL,
	@NEW_DISC	DECIMAL(6, 2) = NULL,
	@ACTION		UNIQUEIDENTIFIER = NULL
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @PRICE		MONEY
	DECLARE @OLD_PRICE	MONEY
	DECLARE	@NEW_PRICE	MONEY

	DECLARE @DT	SMALLDATETIME

	SELECT @DT = DATE FROM Common.Month WHERE ID = @MONTH

	IF NOT EXISTS
		(
			SELECT *
			FROM System.Price
			WHERE ID_MONTH = @MONTH
		)
		SELECT @MONTH = ID
		FROM Common.Month
		WHERE DATE =
			(
				SELECT MAX(DATE)
				FROM
					Common.Month a
					INNER JOIN System.Price b ON a.ID = b.ID_MONTH
				WHERE DATE <= @DT
			)

	IF @OLD_DISC IS NULL AND @NEW_DISC IS NOT NULL
		SET @OLD_DISC = @NEW_DISC

	IF @SYS IS NOT NULL
		SELECT @PRICE = PRICE
		FROM
			System.Price a
		WHERE ID_MONTH = @MONTH AND ID_SYSTEM = @SYS
	ELSE
	BEGIN
		SELECT @OLD_PRICE = PRICE
		FROM
			System.Price
		WHERE ID_MONTH = @MONTH AND ID_SYSTEM = @SYS_OLD

		SELECT @NEW_PRICE = PRICE
		FROM
			System.Price
		WHERE ID_MONTH = @MONTH AND ID_SYSTEM = @SYS_NEW
	END

	DECLARE @COEF		DECIMAL(8, 4)
	DECLARE	@OLD_COEF	DECIMAL(8, 4)
	DECLARE	@NEW_COEF	DECIMAL(8, 4)

	DECLARE @RND		SMALLINT
	DECLARE	@OLD_RND	SMALLINT
	DECLARE	@NEW_RND	SMALLINT

	IF @NET IS NOT NULL
		SELECT @COEF = COEF, @RND = RND
		FROM System.Net
		WHERE ID = @NET
	ELSE
	BEGIN
		SELECT @OLD_COEF = COEF, @OLD_RND = RND
		FROM System.Net
		WHERE ID = @NET_OLD

		SELECT @NEW_COEF = COEF, @NEW_RND = RND
		FROM System.Net
		WHERE ID = @NET_NEW
	END

	IF @PRICE IS NOT NULL
	BEGIN
		IF @COEF IS NOT NULL
		BEGIN
			IF @ACTION IS NULL
				SET @DELIVERY = 3 * ROUND(ROUND(@PRICE * @COEF, @RND) * (100 - ISNULL(@NEW_DISC, 0))/100, 2)
			ELSE
				SET @DELIVERY = ROUND(ROUND(@PRICE * @COEF, @RND) * (100 - ISNULL(@NEW_DISC, 0))/100, 2)
			SET @SUPPORT = ROUND(@PRICE * @COEF, @RND)
		END
		ELSE
		BEGIN
			SET @DELIVERY = ROUND(ROUND(@PRICE * @NEW_COEF, @NEW_RND) * (100 - ISNULL(@NEW_DISC, 0))/100, 2) - ROUND(ROUND(@PRICE * @OLD_COEF, @OLD_RND) * (100 - ISNULL(@NEW_DISC, 0))/100, 2)
			SET @SUPPORT = ROUND(@PRICE * @NEW_COEF, @NEW_RND)
		END
	END
	ELSE
	BEGIN
		IF @COEF IS NOT NULL
		BEGIN
			SET @DELIVERY = ROUND(ROUND(@NEW_PRICE * @COEF, @RND) * (100 - ISNULL(@NEW_DISC, 0))/100, 2) - ROUND(ROUND(@OLD_PRICE * @COEF, @RND) * (100 - ISNULL(@OLD_DISC, 0))/100, 2)
			SET @SUPPORT = @NEW_PRICE * @COEF
		END
		ELSE
		BEGIN
			SET @DELIVERY = ROUND(ROUND(@NEW_PRICE * @NEW_COEF, @NEW_RND) * (100 - ISNULL(@NEW_DISC, 0))/100, 2) - ROUND(ROUND(@OLD_PRICE * @OLD_COEF, @OLD_RND) * (100 - ISNULL(@OLD_DISC, 0))/100, 2)
			SET @SUPPORT = ROUND(@NEW_PRICE * @NEW_COEF, @NEW_RND)
		END
	END

	IF @DELIVERY < 0
		SET @DELIVERY = 0
END
GRANT EXECUTE ON [Price].[PRICE_VALUE_SELECT] TO rl_offer_r;
GO