USE [SaleDB]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [Meeting].[MEETING_COMPANY_REPORT]
	@BEGIN		SMALLDATETIME,
	@END		SMALLDATETIME,
	@RC			INT = NULL OUTPUT
AS
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY
		SET @END = DATEADD(DAY, 1, @END)

		SELECT 
			a.ID AS CO_ID, a.NAME,
			b.SUCCESS_RATE, b.STAT_NAME, b.RES_NAME,
			b.DATE
		FROM
			(
				SELECT DISTINCT ID, NAME
				FROM Client.Company a
				WHERE a.STATUS = 1
					AND EXISTS
						(
							SELECT *
							FROM Meeting.AssignedMeeting b
							WHERE a.ID = b.ID_COMPANY
								AND (EXPECTED_DATE >= @BEGIN OR @BEGIN IS NULL)
								AND (EXPECTED_DATE < @END OR @END IS NULL)
						)
			) AS a
			CROSS APPLY
			(
				SELECT TOP 1 Common.DateOf(EXPECTED_DATE) AS DATE, SUCCESS_RATE, c.NAME AS RES_NAME, d.NAME AS STAT_NAME
				FROM 
					Meeting.AssignedMeeting b
					LEFT OUTER JOIN Meeting.MeetingResult c ON b.ID_RESULT = c.ID
					LEFT OUTER JOIN Meeting.MeetingStatus d ON b.ID_STATUS = d.ID
				WHERE a.ID = b.ID_COMPANY
					AND b.STATUS = 1
				ORDER BY BDATE DESC
			) b
		ORDER BY DATE, NAME

		SELECT @RC = @@ROWCOUNT
	END TRY
	BEGIN CATCH
		DECLARE	@SEV	INT
		DECLARE	@STATE	INT
		DECLARE	@NUM	INT
		DECLARE	@PROC	NVARCHAR(128)
		DECLARE	@MSG	NVARCHAR(2048)

		SELECT 
			@SEV	=	ERROR_SEVERITY(),
			@STATE	=	ERROR_STATE(),
			@NUM	=	ERROR_NUMBER(),
			@PROC	=	ERROR_PROCEDURE(),
			@MSG	=	ERROR_MESSAGE()

		EXEC Security.ERROR_RAISE @SEV, @STATE, @NUM, @PROC, @MSG
	END CATCH
END