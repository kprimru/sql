USE [SaleDB]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [Meeting].[ASSIGNED_MEETING_INSERT]
	@COMPANY			UNIQUEIDENTIFIER,
	@OFFICE				UNIQUEIDENTIFIER,
	@ASSIGNER			UNIQUEIDENTIFIER,
	@PERSONAL			UNIQUEIDENTIFIER,
	@COMPANY_PERSONAL	NVARCHAR(1024),
	@EXPECTED_DATE		DATETIME,
	@NOTE				NVARCHAR(MAX),
	@INCOMING			BIT,
	@SPECIFY			BIT,
	@AREA				UNIQUEIDENTIFIER,
	@STREET				UNIQUEIDENTIFIER,
	@HOME				NVARCHAR(64),
	@ROOM				NVARCHAR(64),
	@ADDR_NOTE			NVARCHAR(MAX),
	@ID_CALL			UNIQUEIDENTIFIER,
	@ID_PARENT			UNIQUEIDENTIFIER,
	@ID					UNIQUEIDENTIFIER = NULL OUTPUT,
	@PERS_LIST			NVARCHAR(MAX) = NULL,
	@NEXT				SMALLDATETIME
AS
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY
		BEGIN TRAN Meeting

		DECLARE @TBL TABLE (ID	UNIQUEIDENTIFIER)

		DECLARE @STATUS UNIQUEIDENTIFIER

		SELECT @STATUS = ID
		FROM Meeting.MeetingStatus
		WHERE STATUS = 0

		INSERT INTO Meeting.AssignedMeeting(ID_PARENT, ID_COMPANY, ID_OFFICE, ID_CALL, ID_ASSIGNER, ID_PERSONAL, COMPANY_PERSONAL, EXPECTED_DATE, NOTE, INCOMING, SPECIFY, ID_STATUS)
			OUTPUT inserted.ID INTO @TBL
			VALUES(@ID_PARENT, @COMPANY, @OFFICE, @ID_CALL, @ASSIGNER, @PERSONAL, @COMPANY_PERSONAL, @EXPECTED_DATE, @NOTE, @INCOMING, @SPECIFY, @STATUS)

		SELECT @ID = ID FROM @TBL

		INSERT INTO Meeting.MeetingAddress(ID_MEETING, ID_AREA, ID_STREET, HOME, ROOM, NOTE)
			VALUES(@ID, @AREA, @STREET, @HOME, @ROOM, @NOTE)

		INSERT INTO Meeting.AssignedMeetingPersonal(ID_MEETING, ID_PERSONAL)
			SELECT @ID, ID
			FROM Common.TableGUIDFromXml(@PERS_LIST)

		UPDATE Client.Company
		SET WORK_DATE = Common.DateOf(GETDATE())
		WHERE ID = @COMPANY

		DECLARE @CO_XML NVARCHAR(MAX)
		DECLARE @MANAGER	UNIQUEIDENTIFIER

		SET @CO_XML = N'<root><item id="' + CONVERT(NVARCHAR(50), @COMPANY) + '" /></root>'

		IF @PERSONAL IS NOT NULL
		BEGIN
			SELECT @MANAGER = MANAGER FROM Personal.OfficePersonal WHERE ID = @PERSONAL
			IF (SELECT ID_PERSONAL FROM Client.CompanyProcessSaleView WITH(NOEXPAND) WHERE ID = @COMPANY) <> @PERSONAL
			BEGIN
				EXEC Client.COMPANY_PROCESS_SALE_RETURN @CO_XML
				EXEC Client.COMPANY_PROCESS_SALE @CO_XML, @PERSONAL

				IF (SELECT MANAGER FROM Personal.OfficePersonal WHERE ID = @PERSONAL) <> (SELECT ID_PERSONAL FROM Client.CompanyProcessManagerView WITH(NOEXPAND) WHERE ID = @COMPANY)
				BEGIN
					IF @MANAGER IS NOT NULL
					BEGIN
						EXEC Client.COMPANY_PROCESS_MANAGER_RETURN @CO_XML
						EXEC Client.COMPANY_PROCESS_MANAGER @CO_XML, @MANAGER
					END
				END
			END
		END

		EXEC Client.CALL_DATE_CHANGE @COMPANY, @NEXT

		EXEC Client.COMPANY_REINDEX @COMPANY, NULL

		COMMIT TRAN Meeting
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN Meeting

		DECLARE	@SEV	INT
		DECLARE	@STATE	INT
		DECLARE	@NUM	INT
		DECLARE	@PROC	NVARCHAR(128)
		DECLARE	@MSG	NVARCHAR(2048)

		SELECT
			@SEV	=	ERROR_SEVERITY(),
			@STATE	=	ERROR_STATE(),
			@NUM	=	ERROR_NUMBER(),
			@PROC	=	ERROR_PROCEDURE(),
			@MSG	=	ERROR_MESSAGE()

		EXEC Security.ERROR_RAISE @SEV, @STATE, @NUM, @PROC, @MSG
	END CATCH
END
GRANT EXECUTE ON [Meeting].[ASSIGNED_MEETING_INSERT] TO rl_meeting_assign;
GO