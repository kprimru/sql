USE [SaleDB]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[Client].[COMPANY_FILES_INSERT]', 'P ') IS NULL EXEC('CREATE PROCEDURE [Client].[COMPANY_FILES_INSERT]  AS SELECT 1')
GO
ALTER PROCEDURE [Client].[COMPANY_FILES_INSERT]
	@COMPANY	UNIQUEIDENTIFIER,
	@FILE_NAME	NVARCHAR(512),
	@FILE_DATA	VARBINARY(MAX),
	@NOTE		NVARCHAR(MAX),
	@ID			UNIQUEIDENTIFIER = NULL OUTPUT
AS
BEGIN
	SET NOCOUNT ON;

    DECLARE
        @DebugError     VarChar(512),
        @DebugContext   Xml,
        @Params         Xml;

    EXEC [Debug].[Execution@Start]
        @Proc_Id        = @@ProcId,
        @Params         = @Params,
        @DebugContext   = @DebugContext OUT

	DECLARE @TBL TABLE (ID UNIQUEIDENTIFIER)

	BEGIN TRY
		BEGIN TRAN CompanyFile

		INSERT INTO Client.CompanyFiles(ID_COMPANY, FILE_NAME, FILE_DATA, FILE_NOTE)
			OUTPUT inserted.ID INTO @TBL
			VALUES(@COMPANY, @FILE_NAME, @FILE_DATA, @NOTE)

		SELECT @ID = ID FROM @TBL

		UPDATE Client.Company
		SET WORK_DATE = Common.DateOf(GETDATE())
		WHERE ID = @COMPANY

		--EXEC Client.COMPANY_REINDEX @COMPANY, NULL

		COMMIT TRAN CompanyFile
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN CompanyFile

		DECLARE	@SEV	INT
		DECLARE	@STATE	INT
		DECLARE	@NUM	INT
		DECLARE	@PROC	NVARCHAR(128)
		DECLARE	@MSG	NVARCHAR(2048)

		SELECT
			@SEV	=	ERROR_SEVERITY(),
			@STATE	=	ERROR_STATE(),
			@NUM	=	ERROR_NUMBER(),
			@PROC	=	ERROR_PROCEDURE(),
			@MSG	=	ERROR_MESSAGE()

		EXEC Security.ERROR_RAISE @SEV, @STATE, @NUM, @PROC, @MSG
	END CATCH
END

GO
GRANT EXECUTE ON [Client].[COMPANY_FILES_INSERT] TO rl_company_files_w;
GO
