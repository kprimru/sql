USE [SaleDB]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [Client].[COMPANY_GROUP_DELETE]
	@ID	NVARCHAR(MAX)
AS
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY
		BEGIN TRAN CompanyDelete

		DECLARE @TBL TABLE(ID UNIQUEIDENTIFIER, NEW_ID UNIQUEIDENTIFIER)

		INSERT INTO Client.Company(
							ID_MASTER, SHORT, NAME, NUMBER, ID_PAY_CAT, ID_WORK_STATE, ID_POTENTIAL, ID_ACTIVITY, ACTIVITY_NOTE,
							ID_SENDER, SENDER_NOTE, ID_NEXT_MON, WORK_DATE, DELETE_COMMENT, ID_AVAILABILITY, ID_TAXING,
							ID_WORK_STATUS, ID_CHARACTER, ID_REMOTE, EMAIL, STATUS, BDATE, EDATE, UPD_USER)
			OUTPUT inserted.ID_MASTER, inserted.ID INTO @TBL
			SELECT
				ID, SHORT, NAME, NUMBER, ID_PAY_CAT, ID_WORK_STATE, ID_POTENTIAL, ID_ACTIVITY, ACTIVITY_NOTE,
				ID_SENDER, SENDER_NOTE, ID_NEXT_MON, WORK_DATE, DELETE_COMMENT, ID_AVAILABILITY, ID_TAXING,
				ID_WORK_STATUS, ID_CHARACTER, ID_REMOTE, EMAIL, 2, BDATE, EDATE, UPD_USER
			FROM Client.Company
			WHERE ID IN (SELECT ID FROM Common.TableGUIDFromXML(@ID))

		INSERT INTO Client.CompanyTaxing(ID_COMPANY, ID_TAXING)
			SELECT NEW_ID, ID_TAXING
			FROM
				Client.CompanyTaxing a
				INNER JOIN @TBL b ON a.ID_COMPANY = b.ID

		UPDATE Client.Company
		SET STATUS = 3,
			EDATE = GETDATE(),
			UPD_USER = ORIGINAL_LOGIN()
		WHERE ID IN (SELECT ID FROM Common.TableGUIDFromXML(@ID))

		EXEC Client.COMPANY_REINDEX NULL, @ID

		COMMIT TRAN CompanyDelete
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN CompanyDelete

		DECLARE	@SEV	INT
		DECLARE	@STATE	INT
		DECLARE	@NUM	INT
		DECLARE	@PROC	NVARCHAR(128)
		DECLARE	@MSG	NVARCHAR(2048)

		SELECT
			@SEV	=	ERROR_SEVERITY(),
			@STATE	=	ERROR_STATE(),
			@NUM	=	ERROR_NUMBER(),
			@PROC	=	ERROR_PROCEDURE(),
			@MSG	=	ERROR_MESSAGE()

		EXEC Security.ERROR_RAISE @SEV, @STATE, @NUM, @PROC, @MSG
	END CATCH
END
GO
GRANT EXECUTE ON [Client].[COMPANY_GROUP_DELETE] TO rl_company_d;
GO