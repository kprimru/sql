USE [SaleDB]
	GO
	SET ANSI_NULLS ON
	GO
	SET QUOTED_IDENTIFIER ON
	GO
	CREATE PROCEDURE [Meeting].[ASSIGNED_MEETING_DELETE]
	@ID	UNIQUEIDENTIFIER
AS
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY
		DECLARE @COMPANY UNIQUEIDENTIFIER

		SELECT @COMPANY = ID_COMPANY
		FROM Meeting.AssignedMeeting
		WHERE ID = @ID

		DECLARE @TBL TABLE (ID	UNIQUEIDENTIFIER)

		INSERT INTO Meeting.AssignedMeeting(ID_MASTER, ID_COMPANY, ID_OFFICE, ID_CALL, ID_ASSIGNER, ID_PERSONAL, COMPANY_PERSONAL, EXPECTED_DATE, NOTE, ID_RESULT, SUCCESS_RATE, STATUS, BDATE, EDATE, UPD_USER)
			OUTPUT inserted.ID INTO @TBL
			SELECT ID, ID_COMPANY, ID_OFFICE, ID_CALL, ID_ASSIGNER, ID_PERSONAL, COMPANY_PERSONAL, EXPECTED_DATE, NOTE, ID_RESULT, SUCCESS_RATE, 2, BDATE, EDATE, UPD_USER
			FROM Meeting.AssignedMeeting
			WHERE ID = @ID

		DECLARE @NEWID	UNIQUEIDENTIFIER

		SELECT @NEWID = ID FROM @TBL

		INSERT INTO Meeting.MeetingAddress(ID_MEETING, ID_AREA, ID_STREET, HOME, ROOM, NOTE)
			SELECT @NEWID, ID_AREA, ID_STREET, HOME, ROOM, NOTE
			FROM Meeting.MeetingAddress
			WHERE ID_MEETING = @ID

		UPDATE Meeting.AssignedMeeting
		SET STATUS = 3,
			EDATE = GETDATE(),
			UPD_USER = ORIGINAL_LOGIN()
		WHERE ID = @ID

		EXEC Client.COMPANY_REINDEX @COMPANY, NULL
	END TRY
	BEGIN CATCH
		DECLARE	@SEV	INT
		DECLARE	@STATE	INT
		DECLARE	@NUM	INT
		DECLARE	@PROC	NVARCHAR(128)
		DECLARE	@MSG	NVARCHAR(2048)

		SELECT 
			@SEV	=	ERROR_SEVERITY(),
			@STATE	=	ERROR_STATE(),
			@NUM	=	ERROR_NUMBER(),
			@PROC	=	ERROR_PROCEDURE(),
			@MSG	=	ERROR_MESSAGE()

		EXEC Security.ERROR_RAISE @SEV, @STATE, @NUM, @PROC, @MSG
	END CATCH
END