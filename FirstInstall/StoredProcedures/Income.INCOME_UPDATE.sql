USE [FirstInstall]
	GO
	SET ANSI_NULLS ON
	GO
	SET QUOTED_IDENTIFIER ON
	GO
	CREATE PROCEDURE [Income].[INCOME_UPDATE]
	@IN_ID			UNIQUEIDENTIFIER,
	@IN_ID_INCOME	UNIQUEIDENTIFIER,
	@CL_TEMP		VARCHAR(100),
	@CL_ID			UNIQUEIDENTIFIER,
	@VD_ID			UNIQUEIDENTIFIER,
	@IN_DATE		SMALLDATETIME,
	@IN_PAY			VARCHAR(50)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @OLD	VARCHAR(MAX)
	DECLARE @NEW	VARCHAR(MAX)

	EXEC Common.PROTOCOL_VALUE_GET 'INCOME', @IN_ID, @OLD OUTPUT


	IF @CL_ID IS NOT NULL
	BEGIN
		IF @CL_TEMP <> (SELECT TOP 1 CL_NAME FROM Clients.ClientDetail WHERE CL_ID_MASTER = @CL_ID AND CL_REF = 1)
			EXEC Clients.CLIENTS_INSERT @CL_TEMP, @IN_DATE, @CL_ID OUTPUT
	END
	ELSE
	BEGIN
		SELECT @CL_ID = CL_ID_MASTER
		FROM Clients.ClientDetail
		WHERE CL_NAME = @CL_TEMP
		
		IF @CL_ID IS NULL
		BEGIN
			EXEC Clients.CLIENTS_INSERT @CL_TEMP, @IN_DATE, @CL_ID OUTPUT

			SELECT @CL_ID = CL_ID_MASTER
			FROM Clients.ClientDetail
			WHERE CL_ID = @CL_ID
		END
	END

	UPDATE	Income.Incomes
	SET		IN_ID_INCOME	=	@IN_ID_INCOME,
			IN_ID_CLIENT	=	@CL_ID,
			IN_ID_VENDOR	=	@VD_ID,
			IN_DATE			=	@IN_DATE
	WHERE	IN_ID			=	@IN_ID

	EXEC Common.PROTOCOL_VALUE_GET 'INCOME', @IN_ID, @NEW OUTPUT

	EXEC Common.PROTOCOL_INSERT 'INCOME', 'Редактирование', @IN_ID, @OLD, @NEW

	DECLARE @INS_ID UNIQUEIDENTIFIER

	DECLARE INSTALL CURSOR LOCAL FOR
		SELECT IND_ID_INSTALL
		FROM Install.InstallDetail
		WHERE IND_ID_INCOME IN
			(
				SELECT ID_ID
				FROM Income.IncomeDetail
				WHERE ID_ID_INCOME = @IN_ID
			)

	OPEN INSTALL

	FETCH NEXT FROM INSTALL INTO @INS_ID

	WHILE @@FETCH_STATUS = 0
	BEGIN
		EXEC Install.INSTALL_UPDATE @INS_ID, @CL_ID, @VD_ID, NULL

		FETCH NEXT FROM INSTALL INTO @INS_ID
	END

	CLOSE INSTALL
	DEALLOCATE INSTALL
END
