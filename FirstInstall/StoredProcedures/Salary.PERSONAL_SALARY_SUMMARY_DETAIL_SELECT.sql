USE [FirstInstall]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [Salary].[PERSONAL_SALARY_SUMMARY_DETAIL_SELECT]
	@PR_ID	UNIQUEIDENTIFIER,
	@VD_ID	UNIQUEIDENTIFIER,
	@PT_ID	UNIQUEIDENTIFIER = NULL
AS
BEGIN
	SET NOCOUNT ON;

	IF @PT_ID IS NULL
		SELECT
			DENSE_RANK() OVER(ORDER BY PER_NAME) AS NUM,
			PER_NAME, CONVERT(VARCHAR(20), ID_FULL_DATE, 104) AS PS_DATE, CL_NAME,
			SYS_SHORT, DT_SHORT, NT_NEW_NAME, ID_COMMENT,
			PSD_COUNT, PSD_PERCENT, PSD_MON, PS_CORRECT, PS_SALARY, PSD_TOTAL, PS_DEBT,
			PSD_PAY_DATE,
			CASE PS_ID_PERIOD
				WHEN PS_ID_PAY THEN CAST(1 AS SMALLINT)
				ELSE CAST(0 AS SMALLINT)
			END AS PS_CALC_NOW
		FROM
			Salary.PersonalSalary	LEFT OUTER JOIN
			Salary.PersonalSalaryDetail ON PSD_ID_MASTER = PS_ID INNER JOIN
			Personal.PersonalLast ON PER_ID_MASTER	=	PS_ID_PERSONAL	LEFT OUTER JOIN
			Income.IncomeFullView	ON ID_ID = PSD_ID_INCOME
		WHERE PS_ID_PERIOD = @PR_ID AND PS_ID_VENDOR = @VD_ID
		ORDER BY PER_NAME, CL_NAME, SYS_ORDER
	ELSE
		SELECT
			DENSE_RANK() OVER(ORDER BY PER_NAME) AS NUM,
			PER_NAME, CONVERT(VARCHAR(20), ID_FULL_DATE, 104) AS PS_DATE, CL_NAME,
			SYS_SHORT, DT_SHORT, NT_NEW_NAME, ID_COMMENT,
			PSD_COUNT, PSD_PERCENT, PSD_MON, PS_CORRECT, PS_SALARY, PSD_TOTAL, PS_DEBT,
			PSD_PAY_DATE,
			CASE PS_ID_PERIOD
				WHEN PS_ID_PAY THEN CAST(1 AS SMALLINT)
				ELSE CAST(0 AS SMALLINT)
			END AS PS_CALC_NOW
		FROM
			Salary.PersonalSalary	LEFT OUTER JOIN
			Salary.PersonalSalaryDetail ON PSD_ID_MASTER = PS_ID INNER JOIN
			Personal.PersonalLast ON PER_ID_MASTER	=	PS_ID_PERSONAL	LEFT OUTER JOIN
			Income.IncomeFullView	ON ID_ID = PSD_ID_INCOME
		WHERE PS_ID_PERIOD = @PR_ID AND PS_ID_VENDOR = @VD_ID AND PER_ID_TYPE = @PT_ID
		ORDER BY PER_NAME, CL_NAME, SYS_ORDER
END
GO
GRANT EXECUTE ON [Salary].[PERSONAL_SALARY_SUMMARY_DETAIL_SELECT] TO rl_salary_w;
GO
