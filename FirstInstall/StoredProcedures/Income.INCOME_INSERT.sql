USE [FirstInstall]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [Income].[INCOME_INSERT]
	@IN_ID_INCOME	UNIQUEIDENTIFIER,
	@CL_TEMP		VARCHAR(100),	
	@CL_ID			UNIQUEIDENTIFIER, 	
	@VD_ID			UNIQUEIDENTIFIER, 
	@IN_DATE		SMALLDATETIME,
	@IN_PAY			VARCHAR(50),	
	@IN_ID			UNIQUEIDENTIFIER = NULL OUTPUT
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @OLD	VARCHAR(MAX)
	DECLARE @NEW	VARCHAR(MAX)

	EXEC Common.PROTOCOL_VALUE_GET 'INCOME', NULL, @OLD OUTPUT

	IF @CL_ID IS NOT NULL
	BEGIN
		IF @CL_TEMP <> (SELECT TOP 1 CL_NAME FROM Clients.ClientDetail WHERE CL_ID_MASTER = @CL_ID)
			EXEC Clients.CLIENTS_INSERT @CL_TEMP, @IN_DATE, @CL_ID OUTPUT
	END
	ELSE
	BEGIN
		SELECT @CL_ID = CL_ID_MASTER
		FROM Clients.ClientDetail
		WHERE CL_NAME = @CL_TEMP
		
		IF @CL_ID IS NULL
		BEGIN
			EXEC Clients.CLIENTS_INSERT @CL_TEMP, @IN_DATE, @CL_ID OUTPUT

			SELECT @CL_ID = CL_ID_MASTER
			FROM Clients.ClientDetail
			WHERE CL_ID = @CL_ID
		END
	END

	DECLARE @TBL TABLE (ID UNIQUEIDENTIFIER)

	IF @IN_ID_INCOME IS NOT NULL
	BEGIN
		IF (SELECT TOP 1 IN_ID_INCOME FROM Income.Incomes WHERE IN_ID = @IN_ID_INCOME) IS NOT NULL
			SELECT @IN_ID_INCOME = IN_ID_INCOME FROM Income.Incomes WHERE IN_ID = @IN_ID_INCOME
	END

	INSERT INTO Income.Incomes(IN_ID_INCOME, IN_ID_CLIENT, IN_ID_VENDOR, IN_DATE, IN_PAY)
	OUTPUT INSERTED.IN_ID INTO @TBL
	VALUES(@IN_ID_INCOME, @CL_ID, @VD_ID, @IN_DATE, @IN_PAY)

	SELECT @IN_ID = ID
	FROM @TBL

	EXEC Common.PROTOCOL_VALUE_GET 'INCOME', @IN_ID, @NEW OUTPUT

	EXEC Common.PROTOCOL_INSERT 'INCOME', 'Новая запись', @IN_ID, @OLD, @NEW
END
