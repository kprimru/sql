USE [FirstInstall]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[Book].[BOOK_BONUS_CHRONO]', 'P ') IS NULL EXEC('CREATE PROCEDURE [Book].[BOOK_BONUS_CHRONO]  AS SELECT 1')
GO
ALTER PROCEDURE [Book].[BOOK_BONUS_CHRONO]
	@PT_ID			UNIQUEIDENTIFIER,
	@BB_PERCENT		DECIMAL(8, 4),
	@BB_DATE		SMALLDATETIME,
	@BB_ID_MASTER	UNIQUEIDENTIFIER,
	@BB_END			SMALLDATETIME,
	@BB_ID			UNIQUEIDENTIFIER = NULL OUTPUT
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @OLD	VARCHAR(MAX)
	DECLARE @NEW	VARCHAR(MAX)

	EXEC Common.PROTOCOL_VALUE_GET 'BOOK_BONUS', @BB_ID_MASTER, @OLD OUTPUT

	DECLARE @TBL TABLE(ID UNIQUEIDENTIFIER)
	DECLARE @MASTERID UNIQUEIDENTIFIER


	BEGIN TRANSACTION

	BEGIN TRY
		UPDATE	Book.BookBonusDetail
		SET		BB_END	=	@BB_END,
				BB_REF	=	2
		WHERE	BB_ID	=	@BB_ID

		UPDATE	Book.BookBonus
		SET		BBMS_LAST	=	GETDATE()
		WHERE	BBMS_ID		=	@BB_ID_MASTER

		INSERT INTO
				Book.BookBonusDetail(
					BB_ID_MASTER,
					BB_ID_PT,
					BB_PERCENT,
					BB_DATE
				)
		OUTPUT INSERTED.BB_ID INTO @TBL
		VALUES	(
					@BB_ID_MASTER,
					@PT_ID,
					@BB_PERCENT,
					@BB_DATE
				)

		SELECT	@BB_ID	=	ID
		FROM	@TBL
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT > 0
	        ROLLBACK TRANSACTION
	END CATCH

	IF @@TRANCOUNT > 0
        COMMIT TRANSACTION

	EXEC Common.PROTOCOL_VALUE_GET 'BOOK_BONUS', @BB_ID_MASTER, @NEW OUTPUT

	EXEC Common.PROTOCOL_INSERT 'BOOK_BONUS', 'Хронологическое изменение', @BB_ID_MASTER, @OLD, @NEW
END

GO
GRANT EXECUTE ON [Book].[BOOK_BONUS_CHRONO] TO rl_book_bonus_u;
GO
