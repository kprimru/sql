USE [FirstInstall]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [Distr].[SYSTEM_CHRONO]
	@SYS_NAME		VARCHAR(50),
	@SYS_SHORT		VARCHAR(50),
	@SYS_DATE		SMALLDATETIME,
	@SYS_REG		VARCHAR(50),
	@SYS_ORDER		INT,
	@SYS_ID_MASTER	UNIQUEIDENTIFIER,
	@SYS_END		SMALLDATETIME,
	@SYS_ID			UNIQUEIDENTIFIER = NULL OUTPUT
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @OLD	VARCHAR(MAX)
	DECLARE @NEW	VARCHAR(MAX)

	EXEC Common.PROTOCOL_VALUE_GET 'SYSTEM', @SYS_ID_MASTER, @OLD OUTPUT


	DECLARE @TBL TABLE(ID UNIQUEIDENTIFIER)
	DECLARE @MASTERID UNIQUEIDENTIFIER


	BEGIN TRANSACTION

	BEGIN TRY
		UPDATE	Distr.SystemDetail
		SET		SYS_END	=	@SYS_END,
				SYS_REF	=	2
		WHERE	SYS_ID	=	@SYS_ID

		UPDATE	Distr.Systems
		SET		SYSMS_LAST	=	GETDATE()
		WHERE	SYSMS_ID	=	@SYS_ID_MASTER

		INSERT INTO
				Distr.SystemDetail(
					SYS_ID_MASTER,
					SYS_NAME,
					SYS_SHORT,
					SYS_DATE,
					SYS_REG,
					SYS_ORDER
				)
		OUTPUT INSERTED.SYS_ID INTO @TBL
		VALUES	(
					@SYS_ID_MASTER,
					@SYS_NAME,
					@SYS_SHORT,
					@SYS_DATE,
					@SYS_REG,
					@SYS_ORDER
				)

		SELECT	@SYS_ID = ID
		FROM	@TBL
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT > 0
	        ROLLBACK TRANSACTION
	END CATCH

	IF @@TRANCOUNT > 0
        COMMIT TRANSACTION


	EXEC Common.PROTOCOL_VALUE_GET 'SYSTEM', @SYS_ID_MASTER, @NEW OUTPUT

	EXEC Common.PROTOCOL_INSERT 'SYSTEM', 'Хронологическое изменение', @SYS_ID_MASTER, @OLD, @NEW

END

GO
GRANT EXECUTE ON [Distr].[SYSTEM_CHRONO] TO rl_system_u;
GO
